//- .kanban-item.border-radius-md(data-eid="_task_1_title_id" data-class="border-radius-md")
//-     p.text.mb-0 Click me to change title
.modal.fade(data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" id=`addMonitor`)
    .modal-dialog
        .modal-content
            .modal-header
                h5.h5.modal-title Start a new monitor
                button.btn-close.text-dark(type="button" data-bs-dismiss="modal" aria-label="Close")
                    span(aria-hidden="true") Ã—
            .pt-4.modal-body
                form(action="/dashboard/monitoring/start" method="post" id="newMonitor")

                    .input-group.input-group-static.mb-4.text-start
                        label Select Website/API
                        select.form-control#website-choices(name="siteId" placeholder="Departure")
                            for site in websites
                                option(value=`${site.id}`, selected) #{site.name}

                    .input-group.input-group-static.mb-4.text-start
                        label Select Monitoring Team
                        select.form-control#team-choices(name="teamId" placeholder="Departure")
                            for team in teams
                                option(value=`${team.id}`, selected) #{team.name}

                    .input-group.input-group-static.mb-4
                        label Check Interval
                        input.form-control#interval(placeholder="in minutes" name="interval" type="number" onfocus="focused(this)" onfocusout="defocused(this)")

                    .text-end
                        button.m-1.btn.btn-primary#submitbtn(data-toggle="modal" type="submit" data-target="#jkanban-info-modal")
                            | Save changes 
                            span.spinner-border.spinner-border-sm(role="status" aria-hidden="true")#spina

                        button.m-1.btn.btn-secondary(type="button" data-bs-dismiss="modal" data-target="#addMonitor").

                            Close
script.
    let loading = $('#spina').hide();

    Toast = Swal.mixin({
        toast: true,
        position: 'top-right',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    })



    $("#submitbtn").click(function(event){
        event.preventDefault();
        //- get form
        var form = $("#newMonitor");
        //- make sure empty form is not submitted
        if ($('#website-choices').val() == "" || $('#team-choices').val() == "") {
            Toast.fire({
                icon: "error",
                title: "All fields are required"
            });
        }else if ($('#interval').val() < 5 ){
            Toast.fire({
                icon: "error",
                title: "Check interval cannot be less than 5 minutes"
            });
        }else{
            $.ajax({
                url:form.attr('action'),
                type:form.attr('method'),
                data: form.serialize(),
                beforeSend: function(){
                    loading.show(function(){
                        $("#submitbtn").prop("disabled", true);
                    });
                },
                complete: function(){
                    loading.hide(function(){
                        $("#submitbtn").removeAttr('disabled');
                    });
                    //- listenToCallback();
                },
                success: function(data){
                    console.log(data.data)
                    if(data.status == "success"){
                        form[0].reset();
                        window.location.reload()
                    }
                    Toast.fire({
                        icon:data.status,
                        title:data.data
                    });
                    //- alert(data);
                    //- if(data.response.ResponseCode == '0'){
                    //-     //- Clears The form fields
                    //-     form[0].reset();
                    //-     Toast.fire({
                    //-         //- icon: data.message.type,
                    //-         icon: 'success',
                    //-         title:'Enter your mpesa password...',
                    //-         timer:false
                    //-     });
                    //- }else{
                    //-     Toast.fire({
                    //-         icon: "error",
                    //-         title: "Oops! an error occured try again"
                    //-     });
                    //- }
                },
                timeout: 10000,
                error: function (request, status, error) {
                    //- alert(request,status);
                    Toast.fire({
                        icon: "error",
                        title: "Request time out try again!"
                    });
                }

            });
        }
    });