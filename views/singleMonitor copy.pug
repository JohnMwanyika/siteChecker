extends dashLayout
block content

    .row
        .col-md-7.mt-4
            .card
                .card-header.pb-0.px-3
                    h6.mb-0 Monitor Overview
                .card-body.pt-4.p-3
                    ul.list-group
                        li.list-group-item.border-0.d-flex.p-4.mb-2.bg-gray-100.border-radius-lg
                            .d-flex.flex-column
                                h6.mb-3.text-sm #{website.name} (#{id})
                                span.mb-2.text-xs
                                    | Created By: 
                                    span.text-dark.font-weight-bold.ms-sm-2 #{monitor.User.firstName} #{monitor.User.lastName}
                                span.mb-2.text-xs
                                    | Created On: 
                                    span.text-dark.ms-sm-2.font-weight-bold #{moment(monitor.createdAt).format('DD MMMM YYYY, [at] hh:mm A')}
                                span.mb-2.text-xs
                                    | Updated: 
                                    span.text-dark.ms-sm-2.font-weight-bold #{moment(monitor.updatedAt).startOf('minute').fromNow()}
                                span.mb-2.text-xs
                                    | Website Url: 
                                    a(href=`${website.url}` target="_blank") 
                                        span.ms-sm-2.font-weight-bold #{website.url}
                                span.mb-2.text-xs
                                    | Checking every: 
                                    span.text-dark.ms-sm-2.font-weight-bold #{monitor.interval} Minutes
                                span.mb-2.text-xs
                                    | Team: 
                                    span.text-dark.ms-sm-2.font-weight-bold #{monitor.Team.name}
                                span.mb-2.text-xs
                                    | Members: 
                                    span.text-dark.ms-sm-2.font-weight-bold
                                    br
                                    .avatar-group
                                        each member in monitor.Team.Members
                                            a.avatar.avatar-xs.rounded-circle(href="javascript:;" data-bs-toggle="tooltip" data-bs-placement="bottom", title=`${member.firstName} ${member.lastName}`)
                                                img(alt="Image placeholder" src="../../assets/img/team-1.jpg")

                            .ms-auto.text-end
                                a.btn.btn-link.text-danger.text-gradient.px-3.mb-0(href="javascript:;")
                                    i.material-icons.text-sm.me-2 delete
                                    | Delete
                                a.btn.btn-link.text-dark.px-3.mb-0(href="javascript:;")
                                    i.material-icons.text-sm.me-2 edit
                                    | Edit

        .col-md-5.mt-4
            .card.h-100.mb-4
                .card-header.pb-0.px-3
                    .row
                        .col-md-6
                            h6.mb-0 Outcomes
                        .col-md-6.d-flex.justify-content-start.justify-content-md-end.align-items-center
                            i.material-icons.me-2.text-lg date_range
                            |  
                            small 23 - 30 March 2020
                .card-body.pt-4.p-3
                    h6.text-uppercase.text-body.text-xs.font-weight-bolder.mb-3 Newest
                    div#results
                        //- search
                        //- input.search(type="text")
                        //- All outcomes will be looped here
                        ul.list-group.list#container 
                            //- template placeholder
                            li.border-bottom.list-group-item.border-0.d-flex.justify-content-between.ps-0.mb-2.border-radius-lg(style="display: none;")
                                .animate__animated.animate__fadeInDown.d-flex.align-items-center
                                    button.btn.btn-icon-only.btn-rounded( class=`${btnClass || ''}`).mb-0.me-3.p-3.btn-sm.d-flex.align-items-center.justify-content-center
                                        i.material-icons.text-lg( class=`${icon || ''}`)
                                    .d-flex.flex-column
                                        h6.name.mb-1.text-dark.text-sm #{type || ''}
                                        span.on.text-xs #{myDate || ''}
                                .d-flex.align-items-center.text-danger.text-gradient.text-sm.font-weight-bold.


                        //- pagination
                        ul.pagination



    script.

        document.addEventListener('DOMContentLoaded',function(){
            if(#{user.id}){
                socket.on(`siteStatus_#{user.id}`,(data)=>{
                    console.log('refreshing');
                    makeAjaxCall(#{id});
                });
            }

            makeAjaxCall('#{id}');

            function makeAjaxCall(id){
                $.ajax(
                    {
                        url:`/dashboard/monitor/results/${id}`,
                        type:'get',

                        beforeSend: function () {
                            showSpinner('.overlay-spinner');
                        },

                        complete: function () {
                            hideSpinner('.overlay-spinner');
                        },

                        success:function(result){
                            if(result.status == 'success'){
                                //- console.log(result);
                                populateResults(result.data);
                            }
                        },

                        error: function (xhr, status, error) {
                            console.error('AJAX Error:', error);
                        }
                    }
                )
            };

            //- function to append the list items to the container
            function populateResults(results) {
                const container = $('#container');
                //- clear the existing once before appending
                container.empty();
                if(results.length < 1){
                    return container.append(`<p class="text-center p-5 bg-light">No results to display!</p>`);
                }

                results.forEach((data, index) => {
                    //- console.log(index,data)
                    setTimeout(function () {
                        const listItem = createListItem(data);
                        container.append(listItem);
                        //- listItem.addClass('animate__animated animate__fadeOutDown');
                    }, index * 200); // Delay each item by 200 milliseconds * index
                });
            }
            //- function to create the list Item
            function createListItem(data) {
                const myDate = formatDate(data.createdAt);
                const icon = data.type === 'Up' ? 'expand_less' : data.type === 'Down' ? 'expand_more' : 'priority_high';
                const btnClass = data.type === 'Up' ? 'btn-outline-success' : (data.type === 'Down' ? 'btn-outline-danger' : 'btn-outline-warning');
                return `
                    <li class="border-bottom list-group-item border-0 d-flex justify-content-between ps-0 mb-2 border-radius-lg">
                        <div class="animate__animated animate__fadeInDown d-flex align-items-center">
                            <button class="btn btn-icon-only btn-rounded ${btnClass} mb-0 me-3 p-3 btn-sm d-flex align-items-center justify-content-center">
                                <i class="material-icons text-lg">${icon}</i>
                            </button>
                            <div class="d-flex flex-column">
                                <h6 class="name mb-1 text-dark text-sm">${data.type}</h6>
                                <span class="on text-xs">${myDate}</span>
                            </div>
                        </div>
                        <div class="d-flex align-items-center text-danger text-gradient text-sm font-weight-bold">

                        </div>
                    </li>
                `;
            };

            function formatDate(inputDate) {
                return moment(inputDate).format('DD MMMM YYYY, [at] hh:mm A');
            }

        });